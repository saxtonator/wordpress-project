AWSTemplateFormatVersion: '2010-09-09'

Resources:
  # Security Group for EC2 instances allowing necessary ports
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for frontend and backend instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22  # SSH access
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Open to all, consider restricting to your IP
        - IpProtocol: tcp
          FromPort: 80  # HTTP access
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443  # HTTPS access
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306  # MySQL database access
          ToPort: 3306
          CidrIp: 0.0.0.0/0  # Consider restricting to specific backend services
      SecurityGroupEgress:
        - IpProtocol: -1  # Allows all outbound traffic
          CidrIp: 0.0.0.0/0

  # Frontend EC2 instance
  FrontendInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Change if a different instance type is required
      ImageId: ami-091f18e98bc129c4e  # Ubuntu Server 24.04 AMI, update if needed
      KeyName: Sax-Admin-Key-001  # Ensure this key pair exists in AWS
      SecurityGroupIds:
        - !Ref EC2SecurityGroup  # Attach security group
      IamInstanceProfile: EC2S3AccessRole  # Ensure this IAM role exists in AWS
      Tags:
        - Key: Name
          Value: frontend-webserver  # Label for the instance

  # Backend EC2 instance
  BackendInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Change if needed
      ImageId: ami-091f18e98bc129c4e  # Ubuntu Server 24.04 AMI, update if necessary
      KeyName: Sax-Admin-Key-001  # Ensure this key pair exists in AWS
      SecurityGroupIds:
        - !Ref EC2SecurityGroup  # Attach security group
      IamInstanceProfile: EC2S3AccessRole  # Ensure this IAM role exists in AWS
      Tags:
        - Key: Name
          Value: backend-db  # Label for the instance

  # Associate reserved Elastic IP with Frontend instance
  FrontendElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref FrontendInstance  # Attach to the frontend instance
      AllocationId: eipalloc-046e45f42eb8fbad0  # Ensure this Elastic IP exists in AWS

  # Associate reserved Elastic IP with Backend instance
  BackendElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref BackendInstance  # Attach to the backend instance
      AllocationId: eipalloc-08a161070cb99fad0  # Ensure this Elastic IP exists in AWS

Outputs:
  # Outputs instance IDs for reference
  FrontendInstanceId:
    Description: Instance ID of the frontend web server
    Value: !Ref FrontendInstance

  BackendInstanceId:
    Description: Instance ID of the backend database server
    Value: !Ref BackendInstance
 
